// This file is @generated by prost-build.
/// store registration response
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LicenseKeyFile {
    #[prost(string, tag = "1")]
    pub product_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub customer_first_name: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub customer_last_name: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub license_code: ::prost::alloc::string::String,
    #[prost(string, tag = "11")]
    pub license_type: ::prost::alloc::string::String,
    #[prost(string, tag = "20")]
    pub machine_id: ::prost::alloc::string::String,
    #[prost(uint64, tag = "21")]
    pub timestamp: u64,
    /// determines when the license expires or needs to be renewed
    #[prost(uint64, optional, tag = "25")]
    pub expiration_timestamp: ::core::option::Option<u64>,
    /// determines when the client should attempt to renew the license
    /// expiration. Useful for allowing users to deactivate their machines
    /// that they've stopped using
    /// It is also useful for subscriptions and trials automatically renewing
    /// the expiration
    #[prost(uint64, optional, tag = "26")]
    pub check_back_timestamp: ::core::option::Option<u64>,
    #[prost(string, tag = "30")]
    pub message: ::prost::alloc::string::String,
    /// the message to show if the license ever expires on the user
    #[prost(string, tag = "35")]
    pub post_expiration_message: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LicenseActivationResponse {
    #[prost(message, optional, tag = "1")]
    pub key_file: ::core::option::Option<LicenseKeyFile>,
    #[prost(bytes = "vec", tag = "2")]
    pub key_file_signature: ::prost::alloc::vec::Vec<u8>,
}
