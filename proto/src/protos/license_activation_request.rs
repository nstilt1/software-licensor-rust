// This file is @generated by prost-build.
/// A store registration request
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LicenseActivationRequest {
    /// the license code. should look like:
    /// 1234-5678-90ab-cdef-1234
    /// or caps or with an offline code:
    /// 1234-5678-90ab-cdef-1234-offline-abcd
    #[prost(string, tag = "1")]
    pub license_code: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub machine_id: ::prost::alloc::string::String,
    /// this language_id can be used to have the server send a response in
    /// a pre-determined language
    #[prost(string, tag = "3")]
    pub language_id: ::prost::alloc::string::String,
    /// hardware/simd statistics
    #[prost(message, optional, tag = "4")]
    pub hardware_stats: ::core::option::Option<Stats>,
    #[prost(string, tag = "5")]
    pub product_id: ::prost::alloc::string::String,
    #[prost(uint64, tag = "50")]
    pub timestamp: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Stats {
    #[prost(string, tag = "1")]
    pub os_name: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub computer_name: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub is_64_bit: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub users_language: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub display_language: ::prost::alloc::string::String,
    #[prost(uint32, tag = "6")]
    pub num_logical_cores: u32,
    #[prost(uint32, tag = "7")]
    pub num_physical_cores: u32,
    #[prost(uint32, tag = "8")]
    pub cpu_freq_mhz: u32,
    #[prost(uint32, tag = "34")]
    pub ram_mb: u32,
    #[prost(uint32, tag = "35")]
    pub page_size: u32,
    #[prost(string, tag = "9")]
    pub cpu_vendor: ::prost::alloc::string::String,
    #[prost(string, tag = "10")]
    pub cpu_model: ::prost::alloc::string::String,
    #[prost(bool, tag = "11")]
    pub has_mmx: bool,
    #[prost(bool, tag = "12")]
    pub has_3d_now: bool,
    #[prost(bool, tag = "13")]
    pub has_fma3: bool,
    #[prost(bool, tag = "14")]
    pub has_fma4: bool,
    #[prost(bool, tag = "15")]
    pub has_sse: bool,
    #[prost(bool, tag = "16")]
    pub has_sse2: bool,
    #[prost(bool, tag = "17")]
    pub has_sse3: bool,
    #[prost(bool, tag = "18")]
    pub has_ssse3: bool,
    #[prost(bool, tag = "19")]
    pub has_sse41: bool,
    #[prost(bool, tag = "20")]
    pub has_sse42: bool,
    #[prost(bool, tag = "21")]
    pub has_avx: bool,
    #[prost(bool, tag = "22")]
    pub has_avx2: bool,
    #[prost(bool, tag = "23")]
    pub has_avx512f: bool,
    #[prost(bool, tag = "24")]
    pub has_avx512bw: bool,
    #[prost(bool, tag = "25")]
    pub has_avx512cd: bool,
    #[prost(bool, tag = "26")]
    pub has_avx512dq: bool,
    #[prost(bool, tag = "27")]
    pub has_avx512er: bool,
    #[prost(bool, tag = "28")]
    pub has_avx512ifma: bool,
    #[prost(bool, tag = "29")]
    pub has_avx512pf: bool,
    #[prost(bool, tag = "30")]
    pub has_avx512vbmi: bool,
    #[prost(bool, tag = "31")]
    pub has_avx512vl: bool,
    #[prost(bool, tag = "32")]
    pub has_avx512vpopcntdq: bool,
    #[prost(bool, tag = "33")]
    pub has_neon: bool,
}
