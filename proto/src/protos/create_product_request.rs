// This file is @generated by prost-build.
/// store database item. This is stored in a protobuf message so that its contents can be easily encrypted. The content in the encrypted message will not be able to be analyzed with tools such as AWS Athena.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateProductRequest {
    #[prost(string, tag = "1")]
    pub version: ::prost::alloc::string::String,
    #[prost(string, tag = "20")]
    pub product_name: ::prost::alloc::string::String,
    #[prost(string, tag = "21")]
    pub product_id_prefix: ::prost::alloc::string::String,
    #[prost(bool, tag = "40")]
    pub is_offline_allowed: bool,
    #[prost(uint32, tag = "60")]
    pub max_machines_per_license: u32,
    #[prost(uint64, tag = "150")]
    pub timestamp: u64,
}
/// store database item. This is stored in a protobuf message so that its contents can be easily encrypted. The content in the encrypted message will not be able to be analyzed with tools such as AWS Athena.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProductDbItem {
    #[prost(string, tag = "1")]
    pub version: ::prost::alloc::string::String,
    #[prost(bytes = "vec", tag = "10")]
    pub store_id: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "12")]
    pub product_id: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag = "20")]
    pub product_name: ::prost::alloc::string::String,
}
